on:
  push: # Se ejecuta cuando hay un push en el repositorio
    branches:
      - main
  pull_request: # Se ejecuta en los PR a la rama main
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout main branch with github task
      - name: "Checkout main"
        uses: actions/checkout@v3
      # Install doctl
      - name: "Install doctl"
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Declara la variable TAG
      - name: "Set TAG variable"
        run: echo "TAG=$(echo $GITHUB_SHA | head -c7)" >> $GITHUB_ENV
      # Construir la imagen
      - name: "Build container image"
        run: docker build -f dockerfile.prod -t registry.digitalocean.com/munyaal-docr/munyaal/website:${{ env.TAG }} .
      # Log In to Registry
      - name: "Log in to DigitalOcean Container Registry with short-lived credentials"
        run: doctl registry login --expiry-seconds 1200
      # Subir imagen al registry
      - name: "Push image to DigitalOcean Container Registry"
        run: docker push registry.digitalocean.com/munyaal-docr/munyaal/website:${{ env.TAG }}
      # Actualizar
      - name: "Update deployment file with image"
        run: sed -i 's|<IMAGE>|registry.digitalocean.com/munyaal-docr/munyaal/website:${{ env.TAG }}|' $GITHUB_WORKSPACE/.k8s/manifest.yaml
      # Actualizar el manifest.yaml
      - name: "Update deployment file with version"
        run: sed -i 's|<VERSION>|${{ env.TAG }}|' $GITHUB_WORKSPACE/.k8s/manifest.yaml
      # Log In to Kubernetes Cluster
      - name: 'Save DigitalOcean kubeconfig with short-lived credentials'
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 kube
      # Apply the manifest.yaml
      - name: 'Deploy to DigitalOcean Kubernetes'
        run: kubectl apply -f $GITHUB_WORKSPACE/.k8s/manifest.yaml -n munyaal
      # Verify deployment
      - name: Verify deployment
        run: kubectl rollout status deployment/munyaal-web -n munyaal